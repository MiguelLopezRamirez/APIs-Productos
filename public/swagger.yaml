openapi: 3.0.0
info:
  title: API de Productos
  description: Documentación de la API para la gestión de productos, categorías, compras y usuarios.
  version: 1.0.0
servers:
  - url: https://apis-prodcutos.onrender.com/apiV1/
    description: Servidor en Render

paths:
  /products:
    get:
      summary: Obtener todos los productos
      responses:
        "200":
          description: Lista de productos
    post:
      summary: Crear un nuevo producto
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Producto"
      responses:
        "201":
          description: Producto creado

  /products/{id}:
    get:
      summary: Obtener un producto por ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Datos del producto
    put:
      summary: Actualizar un producto por ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Producto"
      responses:
        "200":
          description: Producto actualizado
    delete:
      summary: Eliminar un producto por ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Producto eliminado

  /products/{id}/history:
    get:
      summary: Obtener el historial de precios de un producto
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Historial de precios del producto

  /products/{id}/sugerencias:
    get:
      summary: Obtener sugerencias de productos basadas en compras previas
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Sugerencias de productos

  /products/{id}/tendenciasPrecios:
    get:
      summary: Predecir tendencias de precios de un producto
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Tendencia de precios del producto

  /categories:
    get:
      summary: Obtener todas las categorías
      responses:
        "200":
          description: Lista de categorías

  /categories/{id}:
    get:
      summary: Obtener una categoría por ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Detalles de la categoría

  /purchases:
    get:
      summary: Obtener todas las compras
      responses:
        "200":
          description: Lista de compras
    post:
      summary: Crear una nueva compra
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Compra"
      responses:
        "201":
          description: Compra creada

  /purchases/{id}:
    get:
      summary: Obtener una compra por ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Detalles de la compra
    put:
      summary: Actualizar una compra por ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Compra"
      responses:
        "200":
          description: Compra actualizada
    delete:
      summary: Eliminar una compra por ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Compra eliminada

  /users:
    get:
      summary: Obtener todos los usuarios
      responses:
        "200":
          description: Lista de usuarios
    post:
      summary: Crear un nuevo usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Usuario"
      responses:
        "201":
          description: Usuario creado

  /users/{id}:
    get:
      summary: Obtener un usuario por ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Detalles del usuario
    put:
      summary: Actualizar un usuario por ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Usuario"
      responses:
        "200":
          description: Usuario actualizado
    delete:
      summary: Eliminar un usuario por ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Usuario eliminado

components:
  schemas:
    Producto:
      type: object
      properties:
        id:
          type: string
          description: ID del producto
        nombre:
          type: string
          description: Nombre del producto
        precio:
          type: number
          description: Precio del producto
        enStock:
          type: boolean
          description: Indica si el producto está en stock
        categoria:
          type: string
          description: Categoría del producto
        detalles:
          type: object
          properties:
            procesador:
              type: string
            ram:
              type: string
            almacenamiento:
              type: string
        historialPrecios:
          type: array
          items:
            $ref: "#/components/schemas/PrecioHistorial"
      example:
        id: "1"
        nombre: "Laptop Gamer"
        precio: 1200
        enStock: true
        categoria: "Electrónica"
        detalles:
          procesador: "Intel i7"
          ram: "16GB"
          almacenamiento: "512GB SSD"
        historialPrecios:
          - fecha: "2023-10-01T00:00:00Z"
            precioAnterior: 1100

    PrecioHistorial:
      type: object
      properties:
        fecha:
          type: string
          format: date-time
          description: Fecha del cambio de precio
        precioAnterior:
          type: number
          description: Precio anterior del producto

    Compra:
      type: object
      properties:
        idCompra:
          type: string
          description: ID de la compra
        productosIds:
          type: array
          items:
            type: string
          description: IDs de los productos comprados
        idUsuario:
          type: string
          description: ID del usuario que realizó la compra
        total:
          type: number
          description: Total de la compra
        fecha:
          type: string
          format: date-time
          description: Fecha de la compra
      example:
        idCompra: "1"
        productosIds: ["1", "2"]
        idUsuario: "123"
        total: 2400
        fecha: "2023-10-01T00:00:00Z"

    Usuario:
      type: object
      properties:
        id:
          type: string
          description: ID del usuario
        nombre:
          type: string
          description: Nombre del usuario
        email:
          type: string
          description: Correo electrónico del usuario
        idCompras:
          type: array
          items:
            type: string
          description: IDs de las compras realizadas por el usuario
      example:
        id: "123"
        nombre: "Juan Pérez"
        email: "juan@example.com"
        idCompras: ["1", "2"]